syntax = "proto2";
package script_service;

import "shared/bundle.proto";
import "google/protobuf/empty.proto";

message ListScriptRequest {
    required int32 page_size = 1;
    required int32 page = 2;
}

message ListScriptResponse {
    required int32 page = 1;
    required int32 total_pages = 2;
    repeated Script scripts = 3;
}

// Create a new script.
// This will create a new revision if the script already exists.
message CreateScriptRequest {
    // Public identifier of the script.
    required string public_identifier = 1;
}

message DeleteScriptRequest {
    required string script_id = 1;
}

message CreateRevisionRequest {
    required string script_id = 1;
    required string project_config = 2;
    required bundle.Bundle bundle = 3;
}

message GetRevisionRequest {
    required string id = 1;
    // Should bundle be included with revision.
    // If false then this will only include revision info.
    required bool with_bundle = 2;
}

// Return revision info.
message ListRevisionsRequest {
    required int32 page_size = 1;
    required int32 page = 2;
    // Script id, otherwise this will show all revisions in general.
    optional string script_id = 3;
}

// List of revision info.
message ListRevisionResponse {
    required int32 page = 1;
    required int32 total_pages = 2;
    repeated Revision revisions = 3;
}

message DeleteRevisionRequest {
    required string revisionId = 1;
}

message SetRevisionRequest {
    required string scriptId = 1;
    // New revision ID.
    // This must be owned by the `scriptId`
    required string revisionId = 2;
}

// Response sent when revision of a script is changed.
message NewRevisionResponse {
    required string scriptId = 1;
    // New revision ID.
    optional string revisionId = 2;
}

// Find an existing script by id.
message FindScriptRequest {
    oneof query {
        string id = 1;
        string public_name = 2;
    }
}

message Revision {
    required string id = 1;
    required string created = 2;
    required string script_id = 3;
    required string project_config = 4;

    // Content bundle.
    optional bundle.Bundle bundle = 5;
}

message Script {
    required string id = 1;
    // Public identifier of the script.
    required string public_identifier = 2;
    required string last_updated = 3;
    optional string current_revision_id = 4;
}

service ScriptService {
    rpc QueryScript(FindScriptRequest) returns (Script);
    rpc ListScripts(ListScriptRequest) returns (ListScriptResponse);
    rpc CreateScript(CreateScriptRequest) returns (Script);
    rpc DeleteScript(DeleteScriptRequest) returns (google.protobuf.Empty);
    rpc SetScriptRevision(SetRevisionRequest) returns (NewRevisionResponse);

    rpc GetRevision(GetRevisionRequest) returns (Revision);
    rpc CreateRevision(CreateRevisionRequest) returns (Revision);
    rpc ListRevisions(ListRevisionsRequest) returns (ListRevisionResponse);
    rpc DeleteRevision(DeleteRevisionRequest) returns (NewRevisionResponse);
}